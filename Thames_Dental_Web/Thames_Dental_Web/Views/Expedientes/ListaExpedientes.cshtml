@model List<Thames_Dental_Web.Models.ClientModel>

@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    ViewData["Title"] = "Lista de Expedientes";
}

<div class="container mt-5 mb-5">
    <h2 class="text-center mb-4" style="color: #008cba;">Lista de Expedientes</h2>


    <!-- Botón para redirigir a "ObtenerExpedientesDesactivados" -->
    <div class="mb-3 text-center">
        <a href="@Url.Action("ObtenerExpedientesDesactivados", "Expedientes")" class="btn btn-secondary">Expedientes Desactivados</a>
    </div>

    <!-- Barra de búsqueda -->
    <div class="row mb-3">
        <div class="col-md-6 offset-md-3">
            <input type="text" id="searchBox" class="form-control" placeholder="Buscar por nombre o apellidos..." onkeyup="searchExpedientes()">
        </div>
    </div>

    @if (Model != null && Model.Count > 0)
    {
        <table class="table table-bordered table-hover" style="background-color: #f9f9f9;">
            <thead style="background-color: #8d9b9f; color: #ffffff; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);">

            <thead style="background-color: #8d9b9f; color: white;">
                <tr>
                    <th>ClienteID</th>
                    <th>Nombre</th>
                    <th>Primer Apellido</th>
                    <th>Segundo Apellido</th>
                    <th>Identificación</th>
                    <th>Teléfono</th>
                    <th>Correo</th>
                    <th>Acciones</th> <!-- Columna para los botones -->
                </tr>
            </thead>
            <tbody id="expedienteTable">
                @foreach (var expediente in Model)
                {
                    <tr class="expediente-row">
                        <td>@expediente.ClienteID</td>
                        <td>@expediente.Nombre</td>
                        <td>@expediente.PrimerApellido</td>
                        <td>@expediente.SegundoApellido</td>
                        <td>@expediente.Identificacion</td>
                        <td>@expediente.TelefonoPrincipal</td>
                        <td>@expediente.CorreoElectronico</td>
                        <td>
                            <!-- Botones de Ver y Editar -->
                            <a href="@Url.Action("VerCliente", "Expedientes", new { clienteID = expediente.ClienteID })" class="btn btn-info btn-sm">Ver</a>

                            <a href="@Url.Action("EditarExpediente", "Expedientes", new { clienteID = expediente.ClienteID })" class="btn btn-warning btn-sm">Editar</a>

                            <!-- Formulario para eliminar con el ClienteID (bloqueado) -->
                            <form id="deleteForm_@expediente.ClienteID" style="display:inline;">
                                <input type="hidden" name="ClienteID" value="@expediente.ClienteID" />
                                <button type="button" class="btn btn-danger btn-sm" disabled>Eliminar</button>
                            </form>

                            <!-- Formulario para desactivar -->
                            <form asp-action="ActualizarEstadoExpediente" method="post" style="display:inline;">
                                <input type="hidden" name="clienteId" value="@expediente.ClienteID" />
                                <input type="hidden" name="nuevoEstado" value="false" />
                                <button type="submit" class="btn btn-secondary btn-sm">Desactivar</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Paginación con números -->
        <div id="paginationControls" class="text-center">
            <button id="prevBtn" class="btn btn-primary" onclick="changePage('prev')">Anterior</button>
            <div id="pageNumbers" class="d-inline-block"></div>
            <button id="nextBtn" class="btn btn-primary" onclick="changePage('next')">Siguiente</button>
        </div>
    }
    else
    {
        <p class="text-center">No hay expedientes disponibles.</p>
    }
</div>

<!-- Script para la función de búsqueda y paginación -->
<script>
    const pageSize = 10; // Número de filas por página
    let currentPage = 1;
    let totalPages;
    const rows = document.querySelectorAll('.expediente-row');
    totalPages = Math.ceil(rows.length / pageSize);

    function displayPage(page) {
        const start = (page - 1) * pageSize;
        const end = start + pageSize;

        rows.forEach((row, index) => {
            if (index >= start && index < end) {
                row.style.display = ''; // Mostrar fila
            } else {
                row.style.display = 'none'; // Ocultar fila
            }
        });

        document.getElementById('pageNumber').textContent = `Página ${page}`;
        document.getElementById('prevBtn').disabled = page === 1;
        document.getElementById('nextBtn').disabled = page === totalPages;

        // Actualizar la paginación con números
        updatePageNumbers();
    }

    function changePage(direction) {
        if (direction === 'prev' && currentPage > 1) {
            currentPage--;
        } else if (direction === 'next' && currentPage < totalPages) {
            currentPage++;
        }
        displayPage(currentPage);
    }

    function updatePageNumbers() {
        const pageNumbersContainer = document.getElementById('pageNumbers');
        pageNumbersContainer.innerHTML = '';

        for (let i = 1; i <= totalPages; i++) {
            const pageNumberBtn = document.createElement('button');
            pageNumberBtn.classList.add('btn', 'btn-secondary', 'btn-sm', 'mx-1');
            pageNumberBtn.textContent = i;
            pageNumberBtn.onclick = function() {
                currentPage = i;
                displayPage(currentPage);
            };
            if (i === currentPage) {
                pageNumberBtn.classList.add('active');
            }
            pageNumbersContainer.appendChild(pageNumberBtn);
        }
    }

    function searchExpedientes() {
        const input = document.getElementById("searchBox");
        const filter = input.value.toLowerCase();
        const table = document.getElementById("expedienteTable");
        const tr = table.getElementsByTagName("tr");

        for (let i = 0; i < tr.length; i++) {
            const tdName = tr[i].getElementsByTagName("td")[1];
            const tdApellido1 = tr[i].getElementsByTagName("td")[2];
            const tdApellido2 = tr[i].getElementsByTagName("td")[3];

            if (tdName || tdApellido1 || tdApellido2) {
                const nameValue = tdName.textContent || tdName.innerText;
                const apellido1Value = tdApellido1.textContent || tdApellido1.innerText;
                const apellido2Value = tdApellido2.textContent || tdApellido2.innerText;

                if (nameValue.toLowerCase().includes(filter) ||
                    apellido1Value.toLowerCase().includes(filter) ||
                    apellido2Value.toLowerCase().includes(filter)) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function eliminarExpediente(ClienteID) {
        if (confirm('¿Está seguro de que desea eliminar este expediente?')) {
            const url = `/Expedientes/EliminarExpediente/${ClienteID}`;
            fetch(url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => {
                    if (response.ok) {
                        alert("Expediente eliminado exitosamente.");
                        location.reload();
                    } else {
                        alert("Error al eliminar el expediente.");
                    }
                })
                .catch(error => {
                    alert("Error de conexión.");
                    console.error('Error:', error);
                });
        }
    }

    // Inicializar la página inicial
    displayPage(currentPage);
</script>
