@model List<Thames_Dental_Web.Models.CitaModel>

@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    ViewData["Title"] = "Citas Administración";
    ViewData["HideNavbar"] = "true";
    ViewData["HideFooter"] = "true";
}

<!-- Incluye SweetAlert2 y Bootstrap desde un CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    .table-actions-container {
        display: flex;
        flex-direction: column;
        gap: 10px;
        align-items: stretch;
    }

    .btn.action-button {
        color: white;
        font-weight: bold;
        padding: 8px 12px;
        border-radius: 4px;
        font-size: 14px;
        border: none;
        cursor: pointer;
        width: 100%;
    }

        .btn.action-button.cancelar {
            background-color: darkred;
            border-color: darkred;
        }

        .btn.action-button.reprogramar {
            background-color: #008cba;
            border-color: #008cba;
        }

        .btn.action-button.aceptar {
            background-color: forestgreen;
            border-color: forestgreen;
        }

        .btn.action-button.editar {
            background-color: #ff9900;
            border-color: #ff9900;
        }

            .btn.action-button.editar:hover {
                background-color: #e68a00;
                border-color: #e68a00;
            }

    h2, h1, h3, h4, h5, h6 {
        text-decoration: none !important; /* Elimina subrayados forzados */
    }

    a {
        text-decoration: none !important; /* Elimina subrayados en enlaces */
    }

        a:hover {
            text-decoration: underline; /* Solo subraya cuando pases el mouse */
        }

</style>


<!-- Reschedule Modal --> 
<div class="modal fade" id="rescheduleModal" tabindex="-1" aria-labelledby="rescheduleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="rescheduleForm" method="post" asp-action="ReprogramarCita" asp-controller="Cita">
                <div class="modal-header">
                    <h5 class="modal-title" id="rescheduleModalLabel">Reprogramar Cita</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="id" id="appointmentId" />
                    <input type="hidden" name="duracion" id="duracionHidden" />

                    <div class="mb-3">
                        <label for="newDate" class="form-label">Nueva Fecha</label>
                        <input type="date" class="form-control" id="newDate" name="Fecha" required onchange="loadAvailableHours()" />
                    </div>

                    <div class="mb-3">
                        <label for="newTime" class="form-label">Nueva Hora</label>
                        <select class="form-control" id="newTime" name="Hora" required>
                            <option value="">Selecciona una hora</option>
                        </select>
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal para Editar Duración -->
<div class="modal fade" id="editDurationModal" tabindex="-1" aria-labelledby="editDurationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editDurationForm" method="post" asp-action="EditarDuracionDesdeFormulario" asp-controller="Cita">
                <div class="modal-header">
                    <h5 class="modal-title" id="editDurationModalLabel">Editar Cita</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <input type="hidden" id="citaId" name="Id" />

                    <div class="mb-3">
                        <label for="duracion" class="form-label">Duración (minutos)</label>
                        <input type="number" id="duracion" name="Duracion" class="form-control" min="1" required />
                    </div>

                    <div class="mb-3">
                        <label for="especialidad" class="form-label">Especialidad</label>
                        <select id="especialidad" name="Especialidad" class="form-select" required>
                            <option value="">Especialidades</option>
                            <option value="Consulta General">Consulta General</option>
                            <option value="Peridoncia">Peridoncia</option>
                            <option value="Endodoncia">Endodoncia</option>
                            <option value="Cirujia Maxilofacial">Cirujia Maxilofacial</option>
                            <option value="Odontopediatria">Odontopediatria</option>
                            <option value="ATM">ATM</option>
                            <option value="Ortodoncia">Ortodoncia</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="procedimiento" class="form-label">Procedimiento</label>
                        <select id="procedimiento" name="Procedimiento" class="form-select" required>
                            <option value="">Seleccione un procedimiento</option>
                            <option value="Consulta General" data-group="Consulta General">Consulta General</option>
                            <option value="Limpieza dental" data-group="Consulta General">Limpieza dental</option>
                            <option value="Blanqueamiento" data-group="Consulta General">Blanqueamiento</option>
                            <option value="Calzas" data-group="Consulta General">Calzas</option>
                            <option value="Corona" data-group="Consulta General">Corona</option>
                            <option value="Puentes" data-group="Consulta General">Puentes</option>
                            <option value="Implante" data-group="Consulta General">Implante</option>
                            <option value="Consulta General" data-group="Ortodoncia">Consulta General</option>
                            <option value="Consulta General" data-group="Peridoncia">Consulta General</option>
                            <option value="Consulta General" data-group="Endodoncia">Consulta General</option>
                            <option value="Cirujia de cordales" data-group="Cirujia Maxilofacial">Cirujia de cordales</option>
                            <option value="Consulta General" data-group="Odontopediatria">Consulta General</option>
                            <option value="Biopsia" data-group="ATM">Biopsia</option>
                        </select>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="container-fluid mt-5 mb-5">
    <h2 class="text-center mb-4" style="color: #008cba;">Ver todas las citas Activas</h2>

    <!-- Barra de búsqueda y botón -->
    <div class="d-flex justify-content-between mb-3">
        <input type="text" id="searchBar" class="form-control" placeholder="Buscar cita por nombre, email, especialidad..." style="width: 70%;" onkeyup="searchTable()" />
        
    </div>

    <div class="table-responsive">
        <table class="table table-bordered" id="appointmentsTable">
            <thead class="table-light">
                <tr>
                    <th>Nombre</th>
                    <th>Email</th>
                    <th>Especialidad</th>
                    <th>Especialista</th>
                    <th>Fecha</th>
                    <th>Hora</th>
                    <th>Procedimiento</th>
                    <th>Duración</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cita in Model)
                {
                    <tr>
                        <td>@cita.NombreUsuario</td>
                        <td>@cita.Email</td>
                        <td>@cita.Especialidad</td>
                        <td>@cita.Especialista</td>
                        <td>@cita.Fecha.ToString("dd/MM/yyyy")</td>
                        <td>@cita.Hora</td>
                        <td>@cita.Procedimiento</td>
                        <td>@cita.Duracion minutos</td>
                        <td class="table-actions-container">
                            <!-- Cancelar -->
                            <form id="cancelar-form-@cita.Id" asp-controller="Cita" asp-action="CancelarCita" method="post">
                                <input type="hidden" name="id" value="@cita.Id" />
                                <button type="button" class="btn action-button cancelar" onclick="confirmarCancelacion(@cita.Id)">
                                    Cancelar
                                </button>
                            </form>

                            <!-- Reprogramar -->
                            <button class="btn action-button reprogramar" onclick="openRescheduleModal(@cita.Id, '@cita.Fecha.ToString("yyyy-MM-dd")', '@cita.Hora', @cita.Duracion)">
                                Reprogramar
                            </button>

                            <!-- Aceptar -->
                            <form asp-action="AceptarCita" method="post">
                                <input type="hidden" name="id" value="@cita.Id" />
                                <button type="submit" class="btn action-button aceptar">
                                    Aceptar
                                </button>
                            </form>

                            <!-- Editar Duración -->
                            <button class="btn action-button editar"
                                    onclick="openEditDurationModal(@cita.Id, @cita.Duracion, '@cita.Especialidad', '@cita.Procedimiento')">
                                Editar
                            </button>




                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.bundle.min.js"></script>
<script>

    function searchTable() {
        const input = document.getElementById("searchBar").value.toLowerCase();
        const rows = document.querySelectorAll("#appointmentsTable tbody tr");

        rows.forEach(row => {
            const cells = row.querySelectorAll("td");
            const rowText = Array.from(cells).map(cell => cell.textContent.toLowerCase()).join(" ");
            row.style.display = rowText.includes(input) ? "" : "none";
        });
    }

    function confirmarCancelacion(id) {
        if (confirm("¿Estás seguro de que deseas cancelar esta cita?")) {
            const form = document.getElementById(`cancelar-form-${id}`);
            if (form) {
                form.submit();
            } else {
                console.error(`No se encontró el formulario con ID: cancelar-form-${id}`);
            }
        }
    }




</script>

<script>
    let selectedCitaId = null;
    let selectedDuracion = 60; // Valor predeterminado

    // Función para abrir el modal de reprogramación
    function openRescheduleModal(id, fecha, hora, duracion) {
        selectedCitaId = id;
        selectedDuracion = duracion > 0 ? duracion : 60;

        const appointmentIdElement = document.getElementById('appointmentId');
        const duracionElement = document.getElementById('duracionHidden');
        const newDateElement = document.getElementById('newDate');
        const horaDropdown = document.getElementById('newTime');

        if (!appointmentIdElement || !newDateElement || !horaDropdown || !duracionElement) {
            console.error("Error: Elementos del DOM no encontrados.");
            Swal.fire('Error', 'Ocurrió un problema al abrir el formulario.', 'error');
            return;
        }

        appointmentIdElement.value = id;
        duracionElement.value = selectedDuracion;
        newDateElement.value = fecha;

        horaDropdown.innerHTML = '<option value="">Selecciona una hora</option>';

        loadAvailableHours();

        const modal = new bootstrap.Modal(document.getElementById('rescheduleModal'));
        modal.show();
    }

    // Función para cargar horas disponibles desde el controlador MVC
    async function loadAvailableHours() {
        const fechaInput = document.getElementById('newDate').value;
        const horaDropdown = document.getElementById('newTime');

        if (!fechaInput) {
            Swal.fire('Error', 'La fecha es requerida para cargar las horas disponibles.', 'error');
            return;
        }

        const url = `/Cita/ObtenerHorasDisponibles?fecha=${fechaInput}&duracion=${selectedDuracion}`;
        console.log('Consultando horas disponibles desde:', url);

        try {
            const response = await fetch(url);
            if (!response.ok) throw new Error(`Error HTTP: ${response.status}`);

            const horasDisponibles = await response.json();

            horaDropdown.innerHTML = '<option value="">Selecciona una hora</option>';
            horasDisponibles.forEach(hora => {
                const option = document.createElement('option');
                option.value = hora;
                option.textContent = hora;
                horaDropdown.appendChild(option);
            });
        } catch (error) {
            console.error('Error al obtener horas:', error);
            Swal.fire('Error', 'No se pudieron cargar las horas disponibles.', 'error');
        }
    }
</script>

<script>
    const allProcedimientos = Array.from(document.querySelectorAll("#procedimiento option"));

    document.getElementById("especialidad").addEventListener("change", function () {
        const selected = this.value;
        const procedimientoSelect = document.getElementById("procedimiento");
        procedimientoSelect.innerHTML = '<option value="">Seleccione un procedimiento</option>';

        allProcedimientos.forEach(opt => {
            if (opt.dataset.group === selected) {
                procedimientoSelect.appendChild(opt.cloneNode(true));
            }
        });
    });

    function openEditDurationModal(id, duracion, especialidad = "", procedimiento = "") {
        document.getElementById("citaId").value = id;
        document.getElementById("duracion").value = duracion;
        document.getElementById("especialidad").value = especialidad;

        // Disparar el cambio para filtrar procedimientos
        const changeEvent = new Event("change");
        document.getElementById("especialidad").dispatchEvent(changeEvent);

        // Esperar un poco para que se generen las opciones
        setTimeout(() => {
            const procedimientoSelect = document.getElementById("procedimiento");
            for (let opt of procedimientoSelect.options) {
                if (opt.value === procedimiento) {
                    procedimientoSelect.value = procedimiento;
                    break;
                }
            }
        }, 100);

        const modal = new bootstrap.Modal(document.getElementById("editDurationModal"));
        modal.show();
    }
</script>



@if (TempData["SweetAlertMessage"] != null)
{
    <script>
        Swal.fire({
            icon: '@TempData["SweetAlertType"]',
            title: '@TempData["SweetAlertMessage"]'
        });
    </script>
}





